addons:
  postgresql: "9.6"
cache: cargo
language: rust
notifications:
  email:
    on_success: never
# Faster container-based builds
sudo: false

env:
  global:
    - TEST_DATABASE_URL=postgres://localhost/podcore-test

matrix:
  include:
    - rust: stable
    - rust: nightly
      # Only run rustfmt on nightly because the current version (which has been
      # current for a very long time now) is still only supported on nightly.
      # Eliminate this specialized check as soon as it goes back to stable.
      env: NIGHTLY=true

before_script:
  - which diesel || cargo install diesel_cli --no-default-features --features postgres
  - createdb podcore-test
  - DATABASE_URL=$TEST_DATABASE_URL diesel migration run
  - if [[ $NIGHTLY == 'true' ]]; then rustup component add rustfmt-preview; fi
  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly install clippy --force; fi

script:
  - cargo test --verbose

  # I'm basically using the `ignore` designation to tag tests that are
  # multi-threaded and need to write "permanent" state to the database which
  # might interfere with other tests. We run all normal tests in parallel on
  # one thread and then run the ignored ones separatately, making sure to
  # specify that we want only a single test thread.
  - cargo test --verbose -- --ignored --test-threads=1

  # Rustfmt is finally available as a preview component outside of nightly, but
  # unfortunately we're using a few configuration options that are considered
  # unstable so it still only works on nightly.
  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly fmt --all -- --write-mode=diff; fi

  # The `-D warnings` argument means that Clippy will send a non-zero exit code
  # if it encounters any linting problems (thus failing the build).
  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly clippy -- -D warnings; fi
